<!-- マップ上をへびが移動していきます。
マップの行数 H と列数 W ,障害物を '#' で移動可能な場所を '.' で表した H 行 W 列のマップ S_1 ... S_H , 現在の座標 sy , sx , 方向転換の回数 N が与えられます。
続けて N 回の方向転換をおこなう時刻 t_1 ... t_N, 転換する向き d_1 ... d_N が与えられます。

へびははじめは北を向いています。

へびは進む先のマスに自分の身体や障害物がない時に移動ができます。
時刻 0 から 99 までの間、へびは各時刻に次の行動を最大 100 回繰り返します。

・ 方向転換をおこなう時刻の場合、指定の向きに方向転換したのち １ マス身体を伸ばす。そうでない時は、今向いている方向に １ マス身体を伸ばす。

時刻が 99 の時の行動を終えるか、移動できなくなった時、移動を終了します。
移動終了時にへびの体のあるマスを '*' にしたマップを出力してください。

移動が可能であるということは、
「移動先のマスに自分の身体や障害物がない かつ 移動先がマップの範囲外でない」
ということを意味します。

なお、マスの座標系は左上端のマスの座標を ( y , x ) = ( 0 , 0 ) とし、
下方向が y 座標の正の向き、右方向が x 座標の正の向きとします。

移動の一例をあげます。例えば次のような入力が与えられた時は図のような移動になります。
図は、時刻 T の行動前の状態を表しています。

5 5 3 1 3
.....
.....
.....
.....
2 R
4 R
6 R

https://paiza.jp/works/mondai/a_rank_level_up_problems/a_rank_snake_mapmove_boss -->

<?php
    [$h , $w , $sy , $sx , $n] = explode(" " , trim(fgets(STDIN)));
    $map = [];
    $directions = ["N", "E", "S", "W"];
    for($i=0; $i<$h; $i++){
        $map[] = trim(fgets(STDIN));
    }
    
    $point = [];
    $l_r = [];
    for($i=0; $i<$n; $i++){
        [$point[] , $l_r[]] =explode(" " , trim(fgets(STDIN)));
    }
    
    $map[$sy][$sx] = "*";
    $now = 0;
    $p = 0;

    for($i=0; $i<100; $i++){
        if($i == $point[$p]){
            if($l_r[$p] === "R"){
                $now = ($now + 1) % 4;
            }else{
                $now = ($now + 3) % 4;
            }
            $p++;
        }
            [$ny , $nx] = [$sy , $sx];
            if($directions[$now] === "N"){
                $sy--;
            }elseif($directions[$now] === "E"){
                $sx++;
            }elseif($directions[$now] === "S"){
                $sy++;
            }else{
                $sx--;
            }
            
            if($sx < 0 || $sx >= $w || $sy < 0 || $sy >= $h || $map[$sy][$sx] === "#" || $map[$sy][$sx] === "*" ){
                $map[$ny][$nx] = "*";
                break;
            }else{
                $map[$sy][$sx] = "*";
        }
    }
    foreach($map as $v){
        echo $v . "\n";
    }